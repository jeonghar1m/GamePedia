{"version":3,"sources":["components/Config.js","components/Pages/LandingPage/LandingPage.js","components/Pages/MovieDetailPage/Sections/MovieInfo.js","components/Pages/MovieDetailPage/Sections/CreditsInfo.js","components/Pages/MovieDetailPage/Sections/SingleComment.js","components/Pages/MovieDetailPage/Sections/ReplyComment.js","_actions/types.js","_actions/user_action.js","components/Pages/MovieDetailPage/Sections/Comment.js","components/Pages/MovieDetailPage/MovieDetailPage.js","components/Pages/MovieDetailPage/OverView/MovieOverView.js","components/Pages/MemberPage/LoginPage.js","components/Pages/MemberPage/RegisterPage.js","components/Pages/MemberPage/MyPage.js","components/Pages/SearchPage/SearchPage.js","components/Pages/SearchPage/Results/SearchResults.js","hoc/auth.js","App.js","reportWebVitals.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["siteTitle","movieLang","countriesLang","movieApiBaseUrl","movieImageBaseUrl","api_key","withRouter","useState","items","setItems","mode","setMode","page","setPage","isFetching","setIsFetching","fetchMovies","useCallback","movieInfo","fetch","then","res","json","index","results","length","poster_path","id","catch","err","infiniteScroll","scrollHeight","Math","max","document","documentElement","body","scrollTop","clientHeight","useEffect","title","window","addEventListener","removeEventListener","className","map","item","href","src","width","height","alt","MovieInfo","props","movie","release_date","Date","getFullYear","production_countries","name","genres","runtime","style","margin","overview","CreditsInfo","credits","director","console","log","profile_path","cast","character","SingleComment","user","useSelector","state","OpenReply","setOpenReply","CommentValue","setCommentValue","onSubmit","event","preventDefault","variables","content","writer","userData","_id","movieId","responseTo","comment","axios","post","data","success","refreshFunction","result","alert","actions","isLogin","onClick","author","nickname","avatar","display","borderRadius","onChange","currentTarget","value","placeholder","ReplyComment","parantCommentId","ChildCommentNumber","setChildCommentNumber","OpenReplyComments","setOpenReplyComments","commentNumber","commentLists","fontSize","color","Fragment","marginLeft","LOGIN_USER","REGISTER_USER","AUTH_USER","auth","dataToSubmit","request","get","type","payload","Comment","commentValue","setcommentValue","setisLogin","dispatch","useDispatch","getIsLogin","isAuth","MovieDetailPage","movieItems","setMovieItems","creditsItems","setCreditsItems","directorsItems","setDirectorsItems","creditsToggle","setCreditsToggle","isLoadingMovie","setIsLoadingMovie","isLoadingCredits","setIsLoadingCredits","Comments","setComments","match","params","variable","creditsInfo","overviewURL","fetchItems","comments","a","spoken_languages","english_name","iso_3166_1","crew","filter","job","movieWebsiteLinkRender","homepage","target","float","newComment","concat","MovieOverView","loading","setLoading","preURL","original_title","countries","lang","vote_average","Id","setId","Password","setPassword","method","loginUser","password","loginSuccess","location","replace","required","Button","variant","Nickname","setNickname","Name","setName","Mail","setMail","ConfirmPassword","setConfirmPassword","registerUser","email","history","push","SearchValue","setSearchValue","onSubmitHandler","Items","Mode","searchKeyword","searchTo","SpecificComponent","option","adminRoute","AuthenticationCheck","isAdmin","App","menuRender","exact","path","component","LandingPage","SearchPage","SearchResultsPage","Auth","Login","Register","MyPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","register","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","getElementById"],"mappings":"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","file":"static/js/main.3b8f26ba.chunk.js","sourcesContent":["export const siteTitle = '마이무비리스트';\nexport const movieLang = {\"English\": \"영어\", \"Korean\": \"한국어\", \"German\": \"독일어\", \"Spanish\": \"스페인어\", \"Japanese\": \"일본어\", \"Mandarin\": \"표준 중국어\", \"French\": \"불어\", \"Dutch\": \"네덜란드어\", \"Turkish\": \"터키어\", \"Finnish\": \"핀란드어\", \"Swedish\": \"스웨덴어\", \"Russian\": \"러시아어\", \"Portuguese\": \"포르투갈어\", \"Swahili\": \"스와힐리어\"};\nexport const countriesLang = {\"US\": \"미국\", \"KR\": \"대한민국\", \"JP\": \"일본\", \"BE\": \"벨기에\", \"NL\": \"네덜란드\", \"CN\": \"중국\", \"TW\": \"대만\", \"GB\": \"영국\", \"RU\": \"러시아\", \"ZA\": \"남아프리카공화국\", \"CA\": \"캐나다\", \"FR\": \"프랑스\", \"MA\": \"모로코\", \"KE\": \"케냐\"};\nexport const movieApiBaseUrl = 'https://api.themoviedb.org/3/movie/';\nexport const movieImageBaseUrl = 'http://image.tmdb.org/t/p/';\nexport const api_key = 'a147cdb0b602da72aeb0b0c24935fb91';","import React, {useEffect, useState, useCallback} from 'react';\nimport { withRouter } from 'react-router';\nimport { siteTitle, movieApiBaseUrl, movieImageBaseUrl, api_key } from '../../Config';\n\nfunction LandingPage() {\n    const [items, setItems] = useState([]);\n    const [mode, setMode] = useState(\"Loading\");\n    const [page, setPage] = useState(1);\n    const [isFetching, setIsFetching] = useState(true);\n \n    const fetchMovies = useCallback(() => {\n        const movieInfo = `${movieApiBaseUrl}popular?api_key=${api_key}&language=ko-KR&page=${page}`;\n        \n        if(isFetching) {\n            fetch(movieInfo)\n            .then(res => res.json())\n            .then(res => {\n                for(let index = 0; index < res.results.length; index++) {\n                    res.results[index].poster_path = `${movieImageBaseUrl}original${res.results[index].poster_path}`;\n                    res.results[index].id = `/movie/${res.results[index].id}`;\n                }\n                \n                setItems([...items, ...res.results]);\n                setMode(\"Normal\");\n                setPage(res.page + 1);\n                setIsFetching(false);\n            })\n            .catch(err => {\n                setMode(\"404\");\n            });\n        }\n    }, [api_key, isFetching, items, page])\n   \n    const infiniteScroll = useCallback(() => {\n        const scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\n        const scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n        const clientHeight = document.documentElement.clientHeight;\n        \n        if((scrollTop + clientHeight >= scrollHeight) && !isFetching)\n            setIsFetching(true);\n    }, [isFetching])\n    \n    useEffect(() => {\n        document.title = siteTitle;\n        if(isFetching)\n            fetchMovies();\n        window.addEventListener('scroll', infiniteScroll, true);\n\n        return () => {\n            window.removeEventListener('scroll', infiniteScroll, true);\n        };\n    }, [page, fetchMovies, infiniteScroll, isFetching])\n    \n    if(mode === \"Loading\") {\n        return (\n            <section className=\"inner\">\n                <div>\n                    <h2>Loading...</h2>\n                </div>\n            </section>\n        )\n    }\n    else if(mode === \"404\") {\n        return (\n            <section className=\"inner\">\n                <div>\n                    <h2>404 Not Found</h2>\n                </div>\n            </section>\n        )\n    }\n    return (\n        <section className=\"inner\">\n            <div>\n                <h2>영화 TOP</h2>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        {items.map(item => (\n                            <div className=\"col col-xl-3 col-md-6 col-12\" key={item.title}>\n                                <div><a href={item.id}><img src={item.poster_path} width=\"100%\" height=\"95%\" alt={item.title}></img></a></div>\n                                <div className=\"movie_name\">{item.title}</div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default withRouter(LandingPage);","import React from 'react'\n\nfunction MovieInfo(props) {\n    const {movie} = props;\n\n    const release_date = new Date(movie.release_date); // 개봉연도만 가져오기 위한 상수 선언\n\n    return (\n        <div>\n            <p><b>기본 정보</b></p>\n            <div>{release_date.getFullYear()} · {movie.production_countries[0].name} · {movie.genres[0].name}</div>\n            <div>{movie.runtime}분</div>\n            <p style={{margin: '1% 0'}}>{movie.overview}</p>\n        </div>\n    )\n}\n\nexport default MovieInfo","import React from 'react';\n\nfunction CreditsInfo(props) {\n    const {credits, director} = props;\n\n    console.log(director);\n    \n    return (\n        <div>\n            <p><b>감독</b></p>\n            <div className=\"container\">\n                <div className=\"row\">\n                    {director.map(director => (\n                        <div className=\"col col-xl-3 col-md-6 col-12\" key={director.name}>\n                            <div><img src={director.profile_path} width=\"100%\" height=\"95%\" alt={director.profile_path}></img></div>\n                            <div className=\"person_name\">{director.name}</div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <p><b>출연</b></p>\n            <div className=\"container\">\n                <div className=\"row\">\n                    {credits.cast.map(cast => (\n                        <div className=\"col col-xl-3 col-md-6 col-12\" key={cast.name}>\n                            <div><img src={cast.profile_path} width=\"100%\" height=\"95%\" alt={cast.profile_path}></img></div>\n                            <div className=\"person_name\">{cast.name} - {cast.character} 역</div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CreditsInfo\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Comment, Avatar, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\n\nfunction SingleComment(props) {\n    const user = useSelector(state => state.user);\n\n    const [OpenReply, setOpenReply] = useState(false);\n    const [CommentValue, setCommentValue] = useState(\"\");\n\n    const onClickReplyOpen = (event) => {\n        event.preventDefault();\n        setOpenReply(!OpenReply);\n    }\n\n    const onHandleChange = (event) => {\n        setCommentValue(event.currentTarget.value);\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n\n        const variables = {\n            content: CommentValue,\n            writer: user.userData._id,\n            movieId: props.movieId,\n            responseTo: props.comment._id\n        }\n\n        axios.post('/api/comment/saveComment', variables)\n        .then(res => {\n            if(res.data.success) {\n                setCommentValue(\"\");\n                setOpenReply(!OpenReply);\n                props.refreshFunction(res.data.result);\n            } else {\n                alert('코멘트를 저장하지 못했습니다.');\n            }\n        })\n    }\n\n    let actions = [];\n    if(props.isLogin) {\n        actions = [\n            <a href=\"\" onClick={onClickReplyOpen} key=\"comment-basic-reply-to\">답글 쓰기</a>\n        ]\n    }\n\n    return (\n        <div>\n            <Comment \n                actions={actions}\n                author={props.comment.writer.nickname}\n                avatar={<Avatar src=\"/img/user_profile.png\" alt=\"image\" />}\n                content={<p>{props.comment.content}</p>}\n            />\n            {OpenReply && \n                <form style={{display: 'flex'}} onSubmit={onSubmit}>\n                    <textarea\n                        style={{width: '100%', borderRadius: '5px'}}\n                        onChange={onHandleChange}\n                        value={CommentValue}\n                        placeholder=\"코멘트를 작성하세요.\"\n                    />\n                    <br />\n                    <Button style={{width: '20%', height: '52px'}} onClick={onSubmit}>확인</Button>\n                </form>\n            }\n        </div>\n    )\n}\n\nexport default SingleComment\n","import React, { useEffect, useState } from 'react';\nimport SingleComment from './SingleComment';\n\nfunction ReplyComment(props) {\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0);\n    const [OpenReplyComments, setOpenReplyComments] = useState(false);\n\n    useEffect(() => {\n        let commentNumber = 0;\n        props.commentLists.map(comment => {\n            if(comment.responseTo === props.parantCommentId) {\n                commentNumber++;\n            }\n        })\n        setChildCommentNumber(commentNumber);\n    }, [props.commentLists, props.parantCommentId])\n\n    const renderReplyComment = (parantCommentId) => \n        props.commentLists.map((comment, index) => (\n            <React.Fragment>\n                {comment.responseTo === parantCommentId && \n                    <div style={{ width: '80%', marginLeft: '40px' }}>\n                        <SingleComment refreshFunction={props.refreshFunction} comment={comment} movieId={props.movieId} />\n                        <ReplyComment refreshFunction={props.refreshFunction} commentLists={props.commentLists} movieId={props.movieId} parantCommentId={comment._id} />\n                    </div>\n                }\n            </React.Fragment>\n        ))\n\n    const onHandleChange = (event) => {\n        event.preventDefault();\n        setOpenReplyComments(!OpenReplyComments);\n    }\n\n    return (\n        <div>\n            {ChildCommentNumber > 0 &&\n                <a href=\"\" style={{ fontSize: '14px', margin: 0, color: 'gray'}} onClick={onHandleChange}>{ChildCommentNumber}개의 댓글 더보기</a>\n            }\n            {OpenReplyComments &&\n                renderReplyComment(props.parantCommentId)\n            }\n        </div>\n    )\n}\n\nexport default ReplyComment\n","export const LOGIN_USER = \"login_user\";\nexport const REGISTER_USER = \"register_user\";\nexport const AUTH_USER = \"auth_user\";","import axios from 'axios';\nimport {LOGIN_USER, REGISTER_USER, AUTH_USER} from './types';\n\nexport function loginUser(dataToSubmit) {\n    const request = axios.post('/api/users/login', dataToSubmit)\n        .then(res => res.data)\n    \n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function registerUser(dataToSubmit) {\n    const request = axios.post('/api/users/register', dataToSubmit)\n        .then(res => res.data)\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function auth(dataToSubmit) {\n    const request = axios.get('/api/users/auth')\n        .then(res => res.data)\n    \n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SingleComment from './SingleComment';\nimport ReplyComment from './ReplyComment';\nimport { auth } from '../../../../_actions/user_action';\n\nfunction Comment(props) {\n    const user = useSelector(state => state.user);\n    const movieId = props.movieId;\n    const [commentValue, setcommentValue] = useState(\"\");\n    const [isLogin, setisLogin] = useState(false);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        getIsLogin();\n    })\n    \n    const getIsLogin = () => {\n        dispatch(auth()).then(res => {\n          if(res.payload.isAuth)  setisLogin(true);\n          else  setisLogin(false);\n        })\n    }\n\n    const handleClick = (event) => {\n        setcommentValue(event.currentTarget.value);\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n\n        const variables = {\n            content: commentValue,\n            writer: user.userData._id,\n            movieId: movieId\n        }\n\n        axios.post('/api/comment/saveComment', variables)\n        .then(res => {\n            if(res.data.success) {\n                setcommentValue(\"\");\n                props.refreshFunction(res.data.result);\n            } else {\n                alert('코멘트를 저장하지 못했습니다.');\n            }\n        })\n    }\n    \n    return (\n        <div>\n            <p><h4>리뷰</h4></p>\n            {/* Comment Lists */}\n            {props.commentLists && props.commentLists.map((comment, index) => (\n                (!comment.responseTo &&\n                    <React.Fragment>\n                        <SingleComment refreshFunction={props.refreshFunction} comment={comment} movieId={movieId} isLogin={isLogin} />\n                        <ReplyComment refreshFunction={props.refreshFunction} parantCommentId={comment._id} movieId={movieId} commentLists={props.commentLists} />\n                    </React.Fragment>\n                )\n            ))}\n            {/* Root Comment Form */}\n            {isLogin && \n                <form style={{display: 'flex'}} onSubmit={onSubmit}>\n                    <textarea\n                        style={{width: '100%', borderRadius: '5px'}}\n                        onChange={handleClick}\n                        value={commentValue}\n                        placeholder=\"코멘트를 작성하세요.\"\n                    >\n                    <br />\n                    </textarea>\n                    <button style={{width: '20%', height: '52px'}} onClick={onSubmit}>확인</button>\n                </form>\n            }\n        </div>\n    )\n}\n\nexport default Comment","import React, {useEffect, useState} from 'react';\nimport MovieInfo from './Sections/MovieInfo';\nimport CreditsInfo from './Sections/CreditsInfo';\nimport Comment from './Sections/Comment';\nimport { siteTitle, movieLang, countriesLang, movieApiBaseUrl, movieImageBaseUrl, api_key } from '../../Config';\nimport axios from 'axios';\n\nfunction MovieDetailPage(props) {\n    const [movieItems, setMovieItems] = useState([]);\n    const [creditsItems, setCreditsItems] = useState([]);\n    const [directorsItems, setDirectorsItems] = useState([])\n    const [creditsToggle, setCreditsToggle] = useState(false);\n    const [isLoadingMovie, setIsLoadingMovie] = useState(true);\n    const [isLoadingCredits, setIsLoadingCredits] = useState(true);\n    const [mode, setMode] = useState(\"Loading\");\n    const [Comments, setComments] = useState([]);\n        \n    const movieId = props.match.params.movieId;\n    const variable = {movieId: movieId};\n    \n    const creditsInfo = `${movieApiBaseUrl}${movieId}/credits?api_key=${api_key}`;\n    const movieInfo = `${movieApiBaseUrl}${movieId}?api_key=${api_key}&language=ko-KR`;\n\n    const overviewURL = `${props.match.params.movieId}/overview`;\n\n    useEffect(() => {\n        fetchItems();\n\n        axios.post('/api/comment/getComment', variable)\n        .then(res => {\n            if(res.data.success) {\n                console.log(res.data.comments);\n                setComments(res.data.comments);\n            } else {\n                alert('코멘트 정보를 가져오는데 실패했습니다.');\n            }\n        })\n    }, []);\n\n    const refreshFunction = (newComment) => {\n        setComments(Comments.concat(newComment));\n    }\n    \n    const fetchItems = async () => {\n        if(isLoadingMovie) {\n            fetch(movieInfo)\n                .then(res => res.json())\n                .then(data => {\n                    data.poster_path = `${movieImageBaseUrl}original${data.poster_path}`;\n            \n                    document.title = `${data.title} - ${siteTitle}`;  // change the title\n            \n                    // 언어 data값 문자열 한국어로 번역\n                    for(let index = 0; index < data.spoken_languages.length; index++)\n                        data.spoken_languages[index].name = movieLang[data.spoken_languages[index].english_name];\n                    \n                    for(let index = 0; index < data.production_countries.length; index++)\n                        data.production_countries[index].name = countriesLang[data.production_countries[index].iso_3166_1];\n                    \n                    setMovieItems(data);\n                    setMode(\"Normal\");\n                    setIsLoadingMovie(false);             \n                })\n                .catch(err => {\n                    setMode(\"404\");\n                });\n        }\n        \n        if(isLoadingCredits) {\n            fetch(creditsInfo)\n                .then(res => res.json())\n                .then(data => {\n                    for(let index = 0; index < data.cast.length; index++)\n                        if(data.cast[index].profile_path !== null)\n                            data.cast[index].profile_path = `${movieImageBaseUrl}original${data.cast[index].profile_path}`;\n                        else\n                            data.cast[index].profile_path = '/img/profile_image_unknown.jpg';\n\n                    const director = data.crew.filter(crew => (crew.job === \"Director\"));\n\n                    for(let index = 0; index < director.length; index++)\n                        if(director[index].profile_path !== null)\n                            director[index].profile_path = `${movieImageBaseUrl}original${director[index].profile_path}`\n                        else\n                            director[index].profile_path = '/img/profile_image_unknown.jpg';\n                    \n                    setCreditsItems(data);\n                    setDirectorsItems(director);\n                    setCreditsToggle(true);\n                    setIsLoadingCredits(false);\n                })\n                .catch(err => {\n                    setMode(\"404\");\n                });\n        }\n    }\n\n    const movieWebsiteLinkRender = movieItems.homepage !== \"\" ? (\n        <a href={movieItems.homepage} target=\"_blank\"><img src={movieItems.poster_path} style={{margin:'0%', float:'left'}} alt=\"\" width=\"15%\" /></a>\n    ) : (\n        <img src={movieItems.poster_path} style={{margin:'0%', float:'left'}} alt=\"\" width=\"15%\" />\n    )\n    \n    if(mode === \"Loading\") {\n        return (\n            <section className=\"inner\">\n                <h2>Loading...</h2>\n            </section>\n        );\n    }\n    else if(mode === \"404\") {\n        return (\n            <section className=\"inner\">\n                <h2>404 Not Found.</h2>\n            </section>\n        ); \n    }\n    return (\n        <section className=\"inner\">\n            <div>\n                <div style={{width:'100%', display:'inline-block'}}>\n                    {movieWebsiteLinkRender}\n                    <h2 style={{margin: '17% 0 0 0'}}>{movieItems.title}</h2>\n                </div>\n                <div id=\"overview\">\n                    <span style={{float: 'right', margin: '0 1%'}}><a href={overviewURL}>자세히보기</a></span>\n                    <MovieInfo movie={movieItems}/>\n                    <hr />\n                    {creditsToggle &&\n                        <CreditsInfo credits={creditsItems} director={directorsItems} />\n                    }\n                </div>\n                {/* Comments */}\n                <Comment refreshFunction={refreshFunction} commentLists={Comments} movieId={movieId} />\n            </div>\n        </section>\n    );\n}\n\nexport default MovieDetailPage;","import React, {useEffect, useState} from 'react';\nimport { siteTitle, movieLang, countriesLang, movieApiBaseUrl, movieImageBaseUrl, api_key } from '../../../Config';\n\nfunction MovieOverView(props) {\n    const movieId = props.match.params.movieId;\n\n    const [movieItems, setMovieItems] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const release_date = new Date(movieItems.release_date); // 개봉연도만 가져오기 위한 상수 선언\n\n    const preURL = `../${props.match.params.movieId}`;\n\n    useEffect(() => {\n        fetch(`${movieApiBaseUrl}${movieId}?api_key=${api_key}&language=ko-KR`)\n            .then(res => res.json())\n            .then(data => {\n                data.poster_path = `${movieImageBaseUrl}original${data.poster_path}`;\n\n                document.title = `${data.title} - ${siteTitle}`;  // change the title\n\n                // 언어 data값 문자열 한국어로 번역\n                for(let index = 0; index < data.spoken_languages.length; index++)\n                    data.spoken_languages[index].name = movieLang[data.spoken_languages[index].english_name];\n                \n                for(let index = 0; index < data.production_countries.length; index++)\n                    data.production_countries[index].name = countriesLang[data.production_countries[index].iso_3166_1];\n                \n                console.log(data);\n\n                setMovieItems(data);\n                setLoading(false);\n            })\n    }, [api_key, movieId])\n\n    return (\n        <div>\n            {!loading ?\n            <section className=\"inner\">\n                <div>\n                    <p><a href={preURL}>[이전]</a></p>\n                    <h2><p>영화 정보</p></h2>\n                    <div id=\"overview\">\n                        <b>원제</b> {movieItems.original_title}\n                        <hr />\n                        <b>개봉연도</b> {release_date.getFullYear()}년\n                        <hr />\n                        <b>국가</b> {movieItems.production_countries.map((countries, index) => (<span key={countries.name}>{countries.name}{(index < movieItems.production_countries.length - 1) ? ',\\u00A0' : ''}</span>))}\n                        <hr />\n                        <b>장르</b> {movieItems.genres.map((genres, index) => (<span key={genres.name}>{genres.name}{(index < movieItems.genres.length - 1) ? ',\\u00A0' : ''}</span>))}\n                        <hr />\n                        <b>상영시간</b> {movieItems.runtime}분\n                        <hr />\n                        <b>상영언어</b> {movieItems.spoken_languages.map((lang, index) => (<span key={lang.name}>{lang.name}{(index < movieItems.spoken_languages.length -1)? ',\\u00A0' : ''}</span>))}\n                        <hr />\n                        <b>IMDB 평점</b> {movieItems.vote_average}\n                        <hr />\n                        <b>내용</b><br />\n                        {movieItems.overview}\n                    </div>\n                </div>\n            </section>\n            :\n            <section className=\"inner\">\n                <div>loading...</div>\n            </section>\n            }\n        </div>\n    )\n}\n\nexport default MovieOverView\n","import React, {useEffect, useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport {siteTitle} from '../../Config';\nimport {useDispatch} from 'react-redux';\nimport {loginUser} from '../../../_actions/user_action';\nimport { withRouter } from 'react-router-dom';\n\nfunction LoginPage() {\n    useEffect(() => {\n        document.title=`로그인 - ${siteTitle}`;\n    }, [])\n\n    const dispatch = useDispatch();\n\n    const [Id, setId] = useState(\"\");\n    const [Password, setPassword] = useState(\"\");\n\n    const onIdHandler = (event) => {\n        setId(event.currentTarget.value);\n    }\n    const onPasswordHandler = (event) => {\n        setPassword(event.currentTarget.value);\n    }\n    const onSubmitHandler = (event) => {\n        event.preventDefault();        \n\n        let body = {\n            id: Id,\n            password: Password\n        }\n\n        dispatch(loginUser(body))\n            .then(res => {\n                if(res.payload.loginSuccess) window.location.replace('/');\n                else    alert('ID 혹은 비밀번호가 맞지 않습니다.');\n            })\n    }\n\n    return (\n        <div>\n            <section className=\"inner\">\n                <div>\n                    <form method=\"post\" onSubmit={onSubmitHandler}>\n                        <fieldset>\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>ID</td>\n                                        <td><input type=\"text\" name=\"id\" value={Id} onChange={onIdHandler} required /></td>\n                                    </tr>\n                                    <tr>\n                                        <td>비밀번호</td>\n                                        <td><input type=\"password\" name=\"pw\" value={Password} onChange={onPasswordHandler} required /></td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <Button variant=\"secondary\" type=\"submit\">로그인</Button>\n                            {/* <Button variant=\"secondary\">ID/비밀번호 찾기</Button> */}\n                        </fieldset>\n                    </form>\n                </div>\n            </section>\n        </div>\n    )\n}\n\nexport default withRouter(LoginPage)\n","import React, {useEffect, useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport {siteTitle} from '../../Config';\nimport {useDispatch} from 'react-redux';\nimport {registerUser} from '../../../_actions/user_action';\nimport {withRouter} from 'react-router-dom';\n\nfunction RegisterPage(props) {\n    useEffect(() => {\n        document.title=`회원가입 - ${siteTitle}`;\n    }, [])\n\n    const dispatch = useDispatch();\n    \n    const [Id, setId] = useState(\"\");\n    const [Nickname, setNickname] = useState(\"\");\n    const [Name, setName] = useState(\"\");\n    const [Mail, setMail] = useState(\"\");\n    const [Password, setPassword] = useState(\"\");\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\");\n\n    const onIdHandler = (event) => {\n        setId(event.currentTarget.value);\n    }\n    const onNicknameHandler = (event) => {\n        setNickname(event.currentTarget.value);\n    }\n    const onNameHandler = (event) => {\n        setName(event.currentTarget.value);\n    }\n    const onMailHandler = (event) => {\n        setMail(event.currentTarget.value);\n    }\n    const onPasswordHandler = (event) => {\n        setPassword(event.currentTarget.value);\n    }\n    const onConfirmPasswordHandler = (event) => {\n        setConfirmPassword(event.currentTarget.value);\n    }\n    const onSubmitHandler = (event) => {\n        event.preventDefault();      \n\n        if(Password !== ConfirmPassword)    return alert(\"비밀번호가 같지 않습니다.\");\n\n        let body = {\n            id: Id,\n            password: Password,\n            nickname: Nickname,\n            name: Name,\n            email: Mail\n        }\n\n        dispatch(registerUser(body))\n            .then(res => {\n                if(res.payload.success) props.history.push(\"/login\");\n                else    alert(\"회원가입에 실패했습니다.\");\n            })\n    }\n\n    return (\n        <div>\n            <section className=\"inner\">\n                <div>\n                    <form method=\"post\" onSubmit={onSubmitHandler}>\n                        <fieldset>\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>ID</td>\n                                        <td><input type=\"text\" name=\"id\" value={Id} onChange={onIdHandler} required /></td>\n                                    </tr>\n                                    <tr>\n                                        <td>닉네임</td>\n                                        <td><input type=\"text\" name=\"nickname\" value={Nickname} onChange={onNicknameHandler} required /></td>\n                                    </tr>\n                                    <tr>\n                                        <td>이름</td>\n                                        <td><input type=\"text\" name=\"name\" value={Name} onChange={onNameHandler} required /></td>\n                                    </tr>\n                                    <tr>\n                                        <td>이메일</td>\n                                        <td><input type=\"email\" name=\"mail\" value={Mail} onChange={onMailHandler} required /></td>\n                                    </tr>\n                                    <tr>\n                                        <td>비밀번호</td>\n                                        <td><input type=\"password\" name=\"pw\" value={Password} onChange={onPasswordHandler} required /></td>\n                                    </tr>\n                                    <tr>\n                                        <td>비밀번호 확인</td>\n                                        <td><input type=\"password\" name=\"pw\" value={ConfirmPassword} onChange={onConfirmPasswordHandler} required /></td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <Button variant=\"secondary\" type=\"submit\">회원가입</Button>\n                        </fieldset>\n                    </form>\n                </div>\n            </section>\n        </div>\n    )\n}\n\nexport default withRouter(RegisterPage)\n","import React, {useEffect, useState} from 'react';\nimport {siteTitle} from '../../Config';\nimport { withRouter } from 'react-router-dom';\nimport {auth} from '../../../_actions/user_action';\nimport {useDispatch} from 'react-redux';\n\nfunction MyPage() {\n    useEffect(() => {\n        dispatch(auth()).then(res => {\n            setNickname(res.payload.nickname);\n            document.title=`${res.payload.nickname}님의 마이페이지 - ${siteTitle}`;\n        });\n    }, [])\n\n    const dispatch = useDispatch();\n    const [Nickname, setNickname] = useState(\"\");\n\n    return (\n        <div>\n            <section className=\"inner\">\n                <div><img src=\"/img/user_profile.png\" /><h1>{Nickname}</h1></div>\n            </section>\n        </div>\n    )\n}\n\nexport default withRouter(MyPage)\n","import React, { useEffect, useState } from 'react';\nimport { siteTitle } from '../../Config';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\n\nfunction SearchPage() {\n    const [SearchValue, setSearchValue] = useState(\"\");\n    \n    const onSearchValueHandler = (event) => {\n        setSearchValue(event.target.value);\n    }\n\n    const onSubmitHandler = (event) => {\n        event.preventDefault();\n        window.location.replace(`/search/${SearchValue}`);\n    }\n    \n    useEffect(() => {\n        document.title = `영화 검색 - ${siteTitle}`;\n    }, [])\n\n    return (\n        <div>\n            <section className=\"inner\">\n                <div className=\"container\">\n                    <form method=\"post\" onSubmit={onSubmitHandler}>\n                        <fieldset>\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>검색</td>\n                                        <td><input type=\"text\" value={SearchValue} onChange={onSearchValueHandler} required /></td>\n                                        <Button variant=\"secondary\" onSubmit={onSubmitHandler} type=\"submit\">확인</Button>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </fieldset>\n                    </form>\n\n                </div>\n            </section>\n        </div>\n    )\n}\n\nexport default withRouter(SearchPage);\n","import React, { useEffect, useState } from 'react';\nimport { siteTitle, movieImageBaseUrl, api_key } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\n\nfunction SearchResults(props) {\n    const [Items, setItems] = useState([]);\n    const [Mode, setMode] = useState(\"Loading\");\n\n    const searchKeyword = props.match.params.searchKeyword;\n\n    const fetchItems = () => {\n        const searchTo = `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&language=ko-KR&query=${searchKeyword}`;\n\n        fetch(searchTo)\n        .then(res => res.json())\n        .then(res => {\n            console.log(res);\n            setItems(res.results);\n\n            for(let index = 0; index < res.results.length; index++) {\n                res.results[index].poster_path = `${movieImageBaseUrl}original${res.results[index].poster_path}`;\n                res.results[index].id = `/movie/${res.results[index].id}`;\n            }\n            setMode(\"Normal\");\n        })\n        .catch(err => {\n            setMode(\"404\");\n        });\n    }\n    \n    useEffect(() => {\n        fetchItems();\n        document.title = `${searchKeyword}에 대한 검색 결과 - ${siteTitle}`;\n    }, [])\n\n    if(Mode === \"Loading\") {\n        return (\n            <section className=\"inner\">\n                <div>\n                    <h2>Loading...</h2>\n                </div>\n            </section>\n        )\n    }\n    return (\n        <div>\n            <section className=\"inner\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h2>검색 결과</h2>\n                        {Items.map(item => (\n                            <div className=\"col col-xl-3 col-md-6 col-12\" key={item.title}>\n                                <div><a href={item.id}><img src={item.poster_path} width=\"100%\" height=\"95%\" alt={item.title}></img></a></div>\n                                <div className=\"movie_name\">{item.title}</div>\n                            </div>\n                        ))}\n                    </div>\n\n                </div>\n            </section>\n        </div>\n    )\n}\n\nexport default withRouter(SearchResults);\n","import React, {useEffect} from 'react';\nimport { useDispatch } from 'react-redux';\nimport {auth} from '../_actions/user_action';\n\nexport default function(SpecificComponent, option = null, adminRoute = null) {\n    // null => 아무나 출입 가능\n    // true => 로그인 한 유저만 출입 가능\n    // false => 로그인한 유저는 출입 불가능\n\n    function AuthenticationCheck(props) {\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            dispatch(auth()).then(res => {\n                // 로그인 하지 않은 상태\n                if(!res.payload.isAuth) {\n                    if(option)  props.history.push('/login');\n                } else {\n                    // 로그인 한 상태\n                    if(adminRoute && !res.payload.isAdmin)  props.history.push('/');\n                    else {\n                        if(!option) props.history.push('/');\n                    }\n                }\n            })\n        })        \n\n        return (<SpecificComponent />)\n    }\n\n    return AuthenticationCheck\n}\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport LandingPage from './components/Pages/LandingPage/LandingPage';\nimport MovieDetailPage from './components/Pages/MovieDetailPage/MovieDetailPage';\nimport MovieOverView from './components/Pages/MovieDetailPage/OverView/MovieOverView';\nimport Login from './components/Pages/MemberPage/LoginPage';\nimport Register from './components/Pages/MemberPage/RegisterPage';\nimport MyPage from './components/Pages/MemberPage/MyPage';\nimport SearchPage from './components/Pages/SearchPage/SearchPage';\nimport SearchResultsPage from './components/Pages/SearchPage/Results/SearchResults';\nimport {Route} from 'react-router-dom';\nimport Auth from './hoc/auth';\nimport axios from 'axios';\nimport {auth} from './_actions/user_action';\nimport {useDispatch} from 'react-redux';\nimport { BsSearch } from \"react-icons/bs\";\nimport { AiOutlineUser } from \"react-icons/ai\";\n\nfunction App(props) {\n  const logoutHandler = () => axios.get('api/users/logout');\n  const [isLogin, setisLogin] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getIsLogin();\n  })\n\n  const getIsLogin = () => {\n    dispatch(auth()).then(res => {\n      if(res.payload.isAuth)  setisLogin(true);\n      else  setisLogin(false);\n    })\n  }\n\n  const menuRender = !isLogin ? (\n    <span>\n      <span className=\"element\"><a href=\"/login\">로그인</a></span>\n      <span className=\"element\"><a href=\"/register\">회원가입</a></span>\n    </span>\n  ) : (\n    <span>\n      <span className=\"element\"><a href=\"\" onClick={logoutHandler}>로그아웃</a></span>\n      <span className=\"element\"><a href=\"/mypage\"><AiOutlineUser /></a></span>\n    </span>\n  )\n\n  return (\n    <div className=\"App\">\n    <header>\n      <nav>\n        <div className=\"inner\">\n          <span id=\"logo\"><h1><a href=\"/\">MyMovieList</a></h1></span>\n          <div id=\"menu\">\n          </div>\n          <div id=\"log\">\n            <a href=\"/search\"><BsSearch /></a>\n            {menuRender}\n          </div>\n        </div>\n      </nav>\n    </header>\n      <Route exact path=\"/\" component={LandingPage}></Route>\n      <Route exact path=\"/movie/:movieId\" component={MovieDetailPage}></Route>\n      <Route exact path=\"/movie/:movieId/overview\" component={MovieOverView}></Route>\n      <Route exact path=\"/search\" component={SearchPage}></Route>\n      <Route exact path=\"/search/:searchKeyword\" component={SearchResultsPage}></Route>\n      <Route exact path=\"/login\" component={Auth(Login, false)}></Route>\n      <Route exact path=\"/register\" component={Auth(Register, false)}></Route>\n      <Route exact path=\"/mypage\" component={Auth(MyPage, true)}></Route>\n    <footer>\n      <hr></hr>\n      &copy; 2021 MyMovieList\n    </footer>\n  </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user\n})\n\nexport default rootReducer;","import { LOGIN_USER, REGISTER_USER, AUTH_USER } from \"../_actions/types\";\n\nexport default function(state = {}, action) {\n    switch(action.type) {\n        case LOGIN_USER:\n            return {...state, loginSuccess: action.payload};\n        case REGISTER_USER:\n            return {...state, register: action.payload};\n        case AUTH_USER:\n            return {...state, userData: action.payload};\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport Reducer from './_reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n  <Provider\n    store={createStoreWithMiddleware(Reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())}\n  >    \n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}